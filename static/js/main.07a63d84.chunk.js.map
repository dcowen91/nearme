{"version":3,"sources":["App.tsx","index.tsx"],"names":["Map","ReactMapboxGl","accessToken","process","App","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","latitude","longitude","showErrorDialog","items","_this2","navigator","geolocation","getCurrentPosition","pos","setState","coords","getArticles","react_default","a","createElement","className","style","containerStyle","height","width","center","lib_esm","type","id","layout","icon-image","map","item","coordinates","_this3","url","concat","axios","get","then","res","wikiItems","data","query","geosearch","responseItem","lat","lon","pageId","pageid","title","React","Component","ReactDOM","render","src_App_0","document","getElementById"],"mappings":"mSA0BMA,EAAMC,YAAc,CACzBC,YAAaC,+FA+ECC,cA3Ed,SAAAA,EAAYC,GAAW,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAL,IACtBE,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAH,GAAAQ,KAAAH,KAAMJ,KAEDQ,MAAQ,CACZC,SAAU,WACVC,WAAY,YACZC,iBAAiB,EACjBC,MAAO,IAPcX,mFAWG,IAAAY,EAAAT,KACzBU,UAAUC,YAAYC,mBACrB,SAACC,GACAJ,EAAKK,SAAS,CACbT,SAAUQ,EAAIE,OAAOV,SACrBC,UAAWO,EAAIE,OAAOT,YAGvBG,EAAKO,eAEN,WAECP,EAAKK,SAAS,CAAEP,iBAAiB,uCAMnC,OACCU,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACdH,EAAAC,EAAAC,cAAA,UAAQC,UAAU,cAAc,UAChCH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBACdH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YACdH,EAAAC,EAAAC,cAAC5B,EAAD,CACC8B,MAAM,kCACNC,eAAgB,CACfC,OAAQ,OACRC,MAAO,QAERC,OAAQ,CAACzB,KAAKI,MAAME,UAAWN,KAAKI,MAAMC,WAE1CY,EAAAC,EAAAC,cAACO,EAAA,EAAD,CAAOC,KAAK,SAASC,GAAG,SAASC,OAAQ,CAAEC,aAAc,cACvD9B,KAAKI,MAAMI,MAAMuB,IAAI,SAAAC,GAAI,OACzBf,EAAAC,EAAAC,cAACO,EAAA,EAAD,CAASO,YAAa,CAACD,EAAK1B,UAAW0B,EAAK3B,yDAWhC,IAAA6B,EAAAlC,KACbmC,EAAG,yFAAAC,OACRpC,KAAKI,MAAMC,SADH,KAAA+B,OAELpC,KAAKI,MAAME,UAFN,yBAIT+B,IAAMC,IAAIH,GAAKI,KAAK,SAAAC,GACnB,IAAMC,EAAyBD,EAAIE,KAAKC,MAAMC,UAAUb,IAAI,SAACc,GAC5D,MAAO,CACNxC,SAAUwC,EAAaC,IACvBxC,UAAWuC,EAAaE,IACxBC,OAAQH,EAAaI,OACrBC,MAAOL,EAAaK,SAItBhB,EAAKpB,SAAS,CAAEN,MAAOiC,aAvERU,IAAMC,WCzBxBC,IAASC,OAAOrC,EAAAC,EAAAC,cAACoC,EAAD,MAASC,SAASC,eAAe","file":"static/js/main.07a63d84.chunk.js","sourcesContent":["import React from 'react';\r\nimport './App.css';\r\nimport ReactMapboxGl, { Layer, Feature } from 'react-mapbox-gl';\r\nimport axios from 'axios';\r\n\r\ninterface IWikipediaResponse {\r\n\tlat: number;\r\n\tlon: number;\r\n\tpageid: number;\r\n\ttitle: number;\r\n}\r\n\r\ninterface IWikiItem {\r\n\tlatitude: number;\r\n\tlongitude: number;\r\n\tpageId: number;\r\n\ttitle: string;\r\n}\r\n\r\ninterface IAppState {\r\n\tlatitude: number;\r\n\tlongitude: number;\r\n\tshowErrorDialog: boolean;\r\n\titems: IWikiItem[];\r\n}\r\n\r\nconst Map = ReactMapboxGl({\r\n\taccessToken: process.env.REACT_APP_MAPBOX_TOKEN as string\r\n});\r\n\r\nclass App extends React.Component<{}, IAppState> {\r\n\tconstructor(props: {}) {\r\n\t\tsuper(props);\r\n\r\n\t\tthis.state = {\r\n\t\t\tlatitude: 47.6072062,\r\n\t\t\tlongitude: -122.3350407,\r\n\t\t\tshowErrorDialog: false,\r\n\t\t\titems: []\r\n\t\t};\r\n\t}\r\n\r\n\tcomponentDidMount(): void {\r\n\t\tnavigator.geolocation.getCurrentPosition(\r\n\t\t\t(pos: Position) => {\r\n\t\t\t\tthis.setState({\r\n\t\t\t\t\tlatitude: pos.coords.latitude,\r\n\t\t\t\t\tlongitude: pos.coords.longitude\r\n\t\t\t\t});\r\n\r\n\t\t\t\tthis.getArticles();\r\n\t\t\t},\r\n\t\t\t() => {\r\n\t\t\t\t// TODO render error if location permission not granted\r\n\t\t\t\tthis.setState({ showErrorDialog: true });\r\n\t\t\t}\r\n\t\t);\r\n\t}\r\n\r\n\trender(): JSX.Element {\r\n\t\treturn (\r\n\t\t\t<div className=\"App\">\r\n\t\t\t\t<header className=\"App-header\">{'NEARME'}</header>\r\n\t\t\t\t<div className=\"mapContainer\">\r\n\t\t\t\t\t<div className=\"mapInner\">\r\n\t\t\t\t\t\t<Map\r\n\t\t\t\t\t\t\tstyle=\"mapbox://styles/mapbox/dark-v10\"\r\n\t\t\t\t\t\t\tcontainerStyle={{\r\n\t\t\t\t\t\t\t\theight: '100%',\r\n\t\t\t\t\t\t\t\twidth: '100%'\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\tcenter={[this.state.longitude, this.state.latitude]}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<Layer type=\"symbol\" id=\"marker\" layout={{ 'icon-image': 'marker-15' }}>\r\n\t\t\t\t\t\t\t\t{this.state.items.map(item => (\r\n\t\t\t\t\t\t\t\t\t<Feature coordinates={[item.longitude, item.latitude]} />\r\n\t\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t\t\t{/* <Feature coordinates={[this.state.longitude, this.state.latitude]} /> */}\r\n\t\t\t\t\t\t\t</Layer>\r\n\t\t\t\t\t\t</Map>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n\r\n\tgetArticles(): void {\r\n\t\tconst url = `https://en.wikipedia.org/w/api.php?action=query&list=geosearch&gsradius=10000&gscoord=${\r\n\t\t\tthis.state.latitude\r\n\t\t}|${this.state.longitude}&format=json&origin=*`;\r\n\r\n\t\taxios.get(url).then(res => {\r\n\t\t\tconst wikiItems: IWikiItem[] = res.data.query.geosearch.map((responseItem: IWikipediaResponse) => {\r\n\t\t\t\treturn {\r\n\t\t\t\t\tlatitude: responseItem.lat,\r\n\t\t\t\t\tlongitude: responseItem.lon,\r\n\t\t\t\t\tpageId: responseItem.pageid,\r\n\t\t\t\t\ttitle: responseItem.title\r\n\t\t\t\t};\r\n\t\t\t});\r\n\r\n\t\t\tthis.setState({ items: wikiItems });\r\n\t\t});\r\n\t}\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}